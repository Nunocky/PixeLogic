#!/usr/bin/env ruby
# -*- coding: utf-8 -*-
require './PixeLogic.rb'


if __FILE__ == $0
  logic = PixeLogic.new({ :width  => 20,
                          :height => 20,
                          :hint_h => [
                            [2,4,5],
                            [1,4,3,5],
                            [2,5,3],
                            [1,2,7,4],
                            [1,2,9,2,1],

                            [4,2,1,2,3],
                            [3,2,3,3,2,2],
                            [2,2,1,3,1,2,1],
                            [1,2,1,3,1,2],
                            [1,2,9,2],

                            [2,2,3,3,2,1],
                            [2,1,1,2],
                            [2,1,1,1,3],
                            [1,11,3],
                            [2,2,2,3,1,3],

                            [2,2,5,4,2],
                            [2,2,2,1,2,1,2,1],
                            [1,3,1,1,3,1],
                            [1,1,1,3,1,1,2],
                            [1,2,5,2,3]
                          ],

                          :hint_v => [
                            [1,1,6,1],
                            [4,2,3],
                            [1,2,2,2,2,1],
                            [1,2,4,3,2,1],
                            [1,2,2,2,4],

                            [4,2,4,1,1],
                            [3,2,3,2,1,2],
                            [2,2,1,2,1,2],
                            [1,3,1,2,3,1,1],
                            [4,5,4,2],

                            [5,3,2,1,2],
                            [4,5,4,2],
                            [1,3,1,2,2,2,1],
                            [2,2,1,2,3],
                            [3,2,3,1,2,2],

                            [4,2,4,1,1],
                            [5,2,2,4],
                            [1,3,4,3,2,1],
                            [1,2,2,5,2],
                            [4,10]
                          ]
                        })

  Signal.trap(:USR1) {
    logic.dump
   }

  def logic.loop_end
    dump
  end

  begin
    logic.solve
  rescue => e
    p e.message
    logic.dump
  end

  puts ""
  logic.dump
  puts ""
  logic.show("■", "　", "？")

end
